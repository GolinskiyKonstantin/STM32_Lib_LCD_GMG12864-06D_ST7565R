/*	сохраняем данный файл в кодировке UTF-8		*/

 author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
 
 

// Делаем настройки в файле ST7565.h

/*
	подключение LCD_128_64_ST7565 ( GMG12864-06D ):

	в CubeMX включаем SPI только на отправку скорость максимум
	( пины желательно называем как в коде если нет то в коде ставим нужнве )

	CS   ->   CS ( chip select )
	RSE  ->   RES ( Reset )
	RS   ->   DC ( date / command )
	SCL	 ->   SCL
	SI	 ->   MOSI
	VDD  ->   +3.3V
	VSS	 ->   GND
	A	 ->   anode led ( +3.3V or PWM )
	K	 ->   katode led ( GND )

*/

//##########  SETUP  ######################################################################################################################################

		//==== выбераем через что будем отправлять через HAL или CMSIS(быстрее) ==================
		//-- нужное оставляем другое коментируем ( важно должно быть только один выбран )---------
		
			// указываем порт SPI для CMSIS ( быстро )-------
			// так как у разных МК разные регистры то в функциях корректируем под свой МК
			// на данный момент есть реализация на серию F1 F4 H7 для выбора серии в функциях
			//	void ST7565_SendCmd(uint8_t Cmd);
			//	void ST7565_SendData(uint8_t Data );
			// комментируем и раскомментируем то что нам нужно, также там же редактируем под свой МК если не работает
			#define 	ST7565_SPI_CMSIS 	SPI1
			//-----------------------------------------------
			
			// указываем порт SPI для HAL ( медлено )--------
			//#define 	ST7565_SPI_HAL 		hspi1
			//-----------------------------------------------
			
		//============================================================================
		
		//=== указываем порты ( если в кубе назвали их DC RES CS то тогда нечего указывать не нужно )
		#if defined (DC_GPIO_Port)
		#else
			#define DC_GPIO_Port		GPIOA
			#define DC_Pin				GPIO_PIN_11
		#endif
		
		#if defined (RES_GPIO_Port)
		#else
			#define RES_GPIO_Port   	GPIOA
			#define RES_Pin			GPIO_PIN_12
		#endif
		
		//--  Cесли используем порт CS для выбора устройства тогда раскомментировать ------------
		// если у нас одно устройство лучше пин CS притянуть к земле( или на порту подать GND )
		
		#define CS_PORT
		
		//----------------------------------------------------------------------------------------
		#ifdef CS_PORT
			#if defined (CS_GPIO_Port)
			#else
				#define CS_GPIO_Port    GPIOA
				#define CS_Pin			GPIO_PIN_14
			#endif
		#endif
		
		//=============================================================================
		
		// выбираем ориентацию экрана ( если нужно повернуть на 180 градусов )
		// если не нужно то комментируем и получим 0 градусов
		//#define SCREEN_ORIENTATION_180
		
//##########################################################################################################################

// если экран будет другого разрешения чем 128 х 64 то редактируем параметр:

		/** Screen width in pixels (tested with 128) */
		#define SCREEN_WIDTH 	128
		/** Screen height in pixels (tested with 64) */
		#define SCREEN_HEIGHT 	64

// далее в файле fonts.h если не используем какойто шрифт то коментируем его для экономии памяти

//##############################################################################################################

//---- для экономии памяти шрифты которые не используються закоментировать -------------------------------------
			// Шрифт имеет кирилицу и латиницу
			#define FONT_6x8		//  6 x 8 pixels font size structure 
			#define FONT_7x9		//  7 x 9 pixels font size structure 
			#define FONT_11x18		//  11 x 18 pixels font size structure 
			#define FONT_16x26		//  16 x 26 pixels font size structure 
			// Только цифры -- only numbers
			#define FONT_16x28		//  16 x 28 pixels font size structure only numbers	
//--------------------------------------------------------------------------------------------------------------

//##############################################################################################################





	#include "ST7565.h"

	#include "fonts.h"
	#include "bitmap.h"


	.........
	.........

main()=============================================================================================================================
	
//////////////////////////////////////////////////////////////////////////////////

	// инициализируем дисплей
	// если нужно повернуть на 180 то в файле "ST7565.h" разкомментируем #define SCREEN_ORIENTATION_180
	ST7565_Init();
	
	HAL_Delay(1000);
	
	// заполняем пиксель в буфер кадра ( координаты ) вкл PIX_ON или выкл PIX_OFF пиксель  X(0 - 127)  Y(0 - 63)
	ST7565_DrawPixel( 5, 5, PIX_ON );		// X(0 - 127)  Y(0 - 63)
	ST7565_DrawPixel( 0, 0, PIX_ON );		// X(0 - 127)  Y(0 - 63)
	ST7565_DrawPixel( 127, 0, PIX_ON );	// X(0 - 127)  Y(0 - 63)
	ST7565_DrawPixel( 0, 63, PIX_ON );		// X(0 - 127)  Y(0 - 63)
	ST7565_DrawPixel( 127, 63, PIX_ON );	// X(0 - 127)  Y(0 - 63)
	
	// вывод буффера кадра на дисплей
	ST7565_Update();
	
	HAL_Delay(1000);

	// очистка только буфера кадра, дисплей не отчищает
	ST7565_ClearBuffer();
	
	// заполняем текст в буфер кадра, кириллица  X(0 - 127)  Y(0 - 63)
	ST7565_Print ( 0, 10, "Привет Hello Вася", &Font_6x8, 1, PIX_ON ); // печатаем надпись с указаным шрифтом и цветом ( PIX_ON- белый , PIX_OFF -черный )
	
	// заполняем текст в буфер кадра, кириллица  X(0 - 127)  Y(0 - 63)
	ST7565_Print ( 0, 30, "Голинский Константин", &Font_6x8, 1, PIX_ON ); // печатаем надпись с указаным шрифтом и цветом ( PIX_ON- белый , PIX_OFF -черный )
	
	// заполняем текст в буфер кадра, кириллица  X(0 - 127)  Y(0 - 63)
	ST7565_Print ( 0, 50, "Привіт Її Іі Єє", &Font_6x8, 1, PIX_ON ); // печатаем надпись с указаным шрифтом и цветом ( PIX_ON- белый , PIX_OFF -черный )
	
	// вывод буффера кадра на дисплей
	ST7565_Update();
	
	HAL_Delay(3000);
	
	// очищаем дисплей ( и буфер кадра тоже )
	ST7565_Clear();
	
	// заполняем картинку в буфер кадра ( координаты , имя массива с картинкой, размер картинки )  X(0 - 127)  Y(0 - 63)
	ST7565_DrawBitmap( 0, 20, logo, 128, 27, PIX_ON );
	
	// вывод буффера кадра на дисплей
	ST7565_Update();
	
	HAL_Delay(1000);
	
	// 1-вкл или 0-откл дисплей ( данные сохраняються )
	ST7565_DisplayOnOff( 0 );
	
	HAL_Delay(1000);
	
	// 1-вкл или 0-откл дисплей ( данные сохраняються )
	ST7565_DisplayOnOff( 1 );
	
	HAL_Delay(1000);
	
	// инвертируем дисплей	1 -да 0 -нет
	ST7565_InvertDisplay( 1 );
	
	HAL_Delay(1000);
	
	// инвертируем дисплей	1 -да 0 -нет
	ST7565_InvertDisplay( 0 );
	
	HAL_Delay(1000);
	
	// заполняем разные фигуры в буфер кадра
	ST7565_DrawLine(20, 20, 30, 30,PIX_ON );
	ST7565_DrawRectangle(40, 40, 10, 20, PIX_ON );
	ST7565_DrawRectangleFilled(70, 30, 10, 20, PIX_ON );
	ST7565_DrawTriangle(20,20,50,30, 100,20, PIX_ON );
	ST7565_DrawTriangleFilled(20,20,51,31, 100,20, PIX_ON );
	ST7565_DrawCircle( 40, 40,20, PIX_ON );
	ST7565_DrawCircleFilled( 40, 40,20, PIX_ON );
	
	ST7565_DrawPixel( 42, 42, PIX_OFF );
	
	// вывод буффера кадра на дисплей
	ST7565_Update();
	
	HAL_Delay(2000);
	
 //рисуем прямоугольник с закругленными краями ( закрашенный )
	ST7565_DrawFillRoundRect(10, 10, 50, 50, 10, PIX_ON);
	
 //рисуем прямоугольник с закругленными краями ( пустотелый )
	ST7565_DrawRoundRect(10, 10, 50, 50, 10, PIX_ON);
	
 //рисуем полукруг ( правое или левое полушарие (параметр 1 или 2) ) закрашенный
	ST7565_DrawFillCircleHelper(30, 30, 20 , 1, 0, PIX_ON);
	
 //рисуем дугу ( четверть круга (параметр 1, 2, 4, 8) ) шириной 1 пиксель
	ST7565_DrawCircleHelper(30, 30, 20 , 1, PIX_ON);

 //рисованиe дуга толстая ( часть круга )
 ST7565_DrawArc(100, 100, 50, 90, 180, PIX_ON, 5);

 //линия толстая ( последний параметр толшина )
 ST7565_DrawLineThick(10, 120, 200, 140, PIX_ON, 5);
	
	// вывод буффера кадра на дисплей
	ST7565_Update();
	
	HAL_Delay(2000);
	
	// очищаем дисплей ( и буфер кадра тоже )
	ST7565_Clear();
	
	for( uint16_t i = 0; i < 127; i++ ){
		char f = i;
		
		// заполняем текст в буфер кадра, кириллица  X(0 - 127)  Y(0 - 63)
		ST7565_Print ( 0, 30, &f, &Font_6x8, 5, PIX_ON ); // печатаем надпись с указаным шрифтом
		
		// вывод буффера кадра на дисплей
		ST7565_Update();
		
		HAL_Delay (10);
	}
	
	// очищаем дисплей ( и буфер кадра тоже )
	ST7565_Clear();
	
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	
////////////////  БЕГУЩАЯ СТРОКА  //////////////////////////////////////////////////////////////////////////////////////
	
	int16_t x = SCREEN_WIDTH;
	
	char text[] = "Hello Привет!! Привіт!! Її Єє Іі World 1234567890 QWERTY qwerty e-mail: vasa@gmail.com =)";

	.........
	.........
	.........

while(1)===========================================================================================================================
		
		// заполняем текст в буфер кадра, кириллица  X(0 - 127)  Y(0 - 63)
		ST7565_Print ( x, 10, text, &Font_6x8, 1, PIX_ON ); // печатаем надпись с указаным шрифтом и цветом ( 0- белый , 1 -черный )
	  
		// вывод буффера кадра на дисплей
		ST7565_Update();
	  
		x--;
		
		// чтобы по окончанию строки Х сбросить в 127
	    if( x == ( -1 * (strlenUTF8(text) * Font_6x8.FontWidth )) ){ x = 127; }
		
		HAL_Delay(70);	// скорость
		
////////////////////  конец бегущая строка /////////////////////////////////////////////////////////////////////////////////////////////////		
		
	.........
	.........
	.........
	.........

=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
